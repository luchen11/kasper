---
layout: post
title:  "从未重构的系统"
date:   2020-05-22 00:47:00
categories: code-style
---

### 不要成为糟糕代码的贡献者

 入职了一家新的公司，项目已经做了两年多了还没有上线。如果是在互联网行业，恐怕算是速度比较慢的了。
 主要讲下项目代码风格问题，项目的代码复用了上古的一个现成项目，里面的很多东西无论是好的设计还是坏的设计都没有改动。主要的更改只是业务逻辑。大致问题有一下几条：

* 1 命名风格混乱，大小写下划线一起来，中英混合，拼音缩写。
* 2 大量注释掉的代码，历史可以追随到10多年前，还有以前项目写死的业务逻辑的处理代码。
* 3不同业务模块的结构体放在同一个头文件中定义，很多的头文件上万行，有的已经达到了5万行。解决方式竟然是再写一个头文件，后面再写业务模板的结构体定义放在2号头文件中。修改一个业务模块的数据结构后，基本上所有文件要全部重新编译，严重浪费时间。
* 4大量重复代码，到处复制却不进行封装为函数。业务逻辑一旦更改，要找各个位置更改重复的代码。
* 5大量的魔数，没有使用宏或者const。在用数组的内存保存一个结构体时使用魔数写死了数组的大小。一旦结构体变动或者不同平台字节对齐不一样，就可能越界。
* 6一个请求流程全写在一个函数中，函数有上千行。不按照单一原理进行拆分为更小的函数。
* 7类的职责划分不合理。例如通用类CommonClass的设计不合理，一个类想表示三种道具的做法是在CommonClass中定义三个指针指向三种道具。CommonClass中的很多函数只能针对一种道具使用，不够内聚。
* 8各个业务之间强耦合，不同业务间硬代码穿插。没有尝试去使用事件解耦。
* 9if-else 嵌套过深，没有提前return/continue。
* 10 服务器间消息客户端与服务器间消息不进行类型区分，每次收到消息需要判断接受者是谁。

### 还是希望每个coder善待自己的代码。