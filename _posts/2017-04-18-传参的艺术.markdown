## 传参时`const int&`   ` int &` 和`int`
最近在写一个项目，是用的cpp,很久没有使用这个语言了。
有些知识点需要重新记下。
*  const int & ptr
*  int & ptr
*  int ptr
这三者的区别，本来界限很清晰。后来写着写着代码就有点迷惑了。
### int ptr
这个是最清楚的了，在传参的时候使用的是复制的方式。
### const int &
传参的时候，使用的传递一个引用，也就是C语言中所说的传指针。其实在底层，和传指针是一样的，只是引用不用解引用。
只要传过来的参数不被改变，都可以使用这中传参方式。
### int &
这个是传递一个普通的引用，可以在函数中进行更改。这里有一个需要注意的点就是，必须是一个右值。因为 `int &`只能绑定一个右值。这是和`const int &`的 有一个明显的区别。
 
例如：
```cpp
int srand()
{
    return data; //返回一个随机数
}
int add(int &x, int& y)
{
    return x + y;
}

int main()
{
    add(srand(), srand());
}
```
这时代码的调用就会出错，因为 `srand（）` 返回的是一个右值，不能绑定到一个`int &`中，这时可以使用`int`或`const int &`.
